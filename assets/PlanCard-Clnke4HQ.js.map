{"version":3,"file":"PlanCard-Clnke4HQ.js","sources":["../../src/components/PhotoModal.tsx","../../src/utils/youtube.ts","../../src/components/YouTubeEmbed.tsx","../../src/components/PlanCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { X, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { WaveButton } from './WaveButton';\nimport { GlassCard } from './GlassCard';\n\ninterface PhotoModalProps {\n  photos: string[];\n  isOpen: boolean;\n  onClose: () => void;\n  initialIndex?: number;\n  placeName?: string;\n}\n\nexport const PhotoModal: React.FC<PhotoModalProps> = ({\n  photos,\n  isOpen,\n  onClose,\n  initialIndex = 0,\n  placeName = ''\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(initialIndex);\n\n  // Reset index when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      setCurrentIndex(initialIndex);\n    }\n  }, [isOpen, initialIndex]);\n\n  // Handle keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (!isOpen) return;\n      \n      switch (e.key) {\n        case 'Escape':\n          onClose();\n          break;\n        case 'ArrowLeft':\n          goToPrevious();\n          break;\n        case 'ArrowRight':\n          goToNext();\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, currentIndex, photos.length]);\n\n  const goToNext = () => {\n    setCurrentIndex((prev) => (prev + 1) % photos.length);\n  };\n\n  const goToPrevious = () => {\n    setCurrentIndex((prev) => (prev - 1 + photos.length) % photos.length);\n  };\n\n  if (!isOpen || photos.length === 0) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/90 backdrop-blur-sm\">\n      {/* Close button */}\n      <WaveButton\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={onClose}\n        className=\"absolute top-4 right-4 z-10 bg-black/30 hover:bg-black/50 rounded-full p-3\"\n        ariaLabel=\"닫기\"\n      >\n        <X className=\"w-6 h-6 text-white\" />\n      </WaveButton>\n\n      {/* Navigation buttons */}\n      {photos.length > 1 && (\n        <>\n          <WaveButton\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={goToPrevious}\n            className=\"absolute left-4 top-1/2 -translate-y-1/2 z-10 bg-black/30 hover:bg-black/50 rounded-full p-3\"\n            ariaLabel=\"이전 사진\"\n          >\n            <ChevronLeft className=\"w-6 h-6 text-white\" />\n          </WaveButton>\n\n          <WaveButton\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={goToNext}\n            className=\"absolute right-4 top-1/2 -translate-y-1/2 z-10 bg-black/30 hover:bg-black/50 rounded-full p-3\"\n            ariaLabel=\"다음 사진\"\n          >\n            <ChevronRight className=\"w-6 h-6 text-white\" />\n          </WaveButton>\n        </>\n      )}\n\n      {/* Main content */}\n      <div className=\"flex flex-col items-center justify-center max-w-7xl max-h-full p-4\">\n        {/* Image */}\n        <div className=\"relative mb-4\">\n          <img\n            src={photos[currentIndex]}\n            alt={`${placeName} 사진 ${currentIndex + 1}`}\n            className=\"max-w-full max-h-[80vh] object-contain rounded-xl shadow-2xl\"\n          />\n        </div>\n\n        {/* Info panel */}\n        <GlassCard variant=\"light\" className=\"max-w-md\">\n          <div className=\"text-center space-y-2\">\n            {placeName && (\n              <h3 className=\"text-lg font-semibold text-white\">\n                {placeName}\n              </h3>\n            )}\n            <div className=\"flex items-center justify-center space-x-4 text-white/70 text-sm\">\n              <span>{currentIndex + 1} / {photos.length}</span>\n            </div>\n            \n            {/* Thumbnail navigation */}\n            {photos.length > 1 && (\n              <div className=\"flex justify-center space-x-2 mt-4 overflow-x-auto max-w-full\">\n                {photos.map((photo, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setCurrentIndex(index)}\n                    className={`relative flex-shrink-0 w-16 h-16 rounded-lg overflow-hidden transition-all ${\n                      index === currentIndex \n                        ? 'ring-2 ring-primary-400 scale-110' \n                        : 'opacity-60 hover:opacity-100'\n                    }`}\n                  >\n                    <img\n                      src={photo}\n                      alt={`썸네일 ${index + 1}`}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        </GlassCard>\n      </div>\n\n      {/* Click outside to close */}\n      <div\n        className=\"absolute inset-0 -z-10\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};","// 유튜브 URL을 임베드 URL로 변환하는 함수\nexport const getYouTubeEmbedUrl = (url: string): string | null => {\n  try {\n    const urlObj = new URL(url);\n    \n    // 다양한 유튜브 URL 형식 지원\n    let videoId: string | null = null;\n    \n    // youtu.be/VIDEO_ID\n    if (urlObj.hostname === 'youtu.be') {\n      videoId = urlObj.pathname.slice(1);\n    }\n    // youtube.com/watch?v=VIDEO_ID\n    else if (urlObj.hostname === 'www.youtube.com' || urlObj.hostname === 'youtube.com') {\n      if (urlObj.pathname === '/watch') {\n        videoId = urlObj.searchParams.get('v');\n      }\n      // youtube.com/embed/VIDEO_ID\n      else if (urlObj.pathname.startsWith('/embed/')) {\n        videoId = urlObj.pathname.slice(7);\n      }\n      // youtube.com/v/VIDEO_ID\n      else if (urlObj.pathname.startsWith('/v/')) {\n        videoId = urlObj.pathname.slice(3);\n      }\n    }\n    \n    if (videoId) {\n      // 시간 파라미터 처리 (t=123s 또는 start=123)\n      const timeParam = urlObj.searchParams.get('t') || urlObj.searchParams.get('start');\n      let startTime = '';\n      \n      if (timeParam) {\n        // \"123s\" 형식이거나 숫자만 있는 경우\n        const seconds = parseInt(timeParam.replace(/[^\\d]/g, ''));\n        if (!isNaN(seconds)) {\n          startTime = `?start=${seconds}`;\n        }\n      }\n      \n      return `https://www.youtube.com/embed/${videoId}${startTime}`;\n    }\n    \n    return null;\n  } catch (error) {\n    console.error('Invalid YouTube URL:', error);\n    return null;\n  }\n};\n\n// 유튜브 비디오 ID 추출\nexport const getYouTubeVideoId = (url: string): string | null => {\n  const embedUrl = getYouTubeEmbedUrl(url);\n  if (embedUrl) {\n    const match = embedUrl.match(/\\/embed\\/([^?]+)/);\n    return match ? match[1] : null;\n  }\n  return null;\n};\n\n// 유튜브 썸네일 URL 생성\nexport const getYouTubeThumbnail = (url: string, quality: 'default' | 'medium' | 'high' | 'standard' | 'maxres' = 'medium'): string | null => {\n  const videoId = getYouTubeVideoId(url);\n  if (videoId) {\n    return `https://img.youtube.com/vi/${videoId}/${quality}default.jpg`;\n  }\n  return null;\n};","import React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Play, Youtube, X } from 'lucide-react';\nimport { GlassCard } from './GlassCard';\nimport { WaveButton } from './WaveButton';\nimport { getYouTubeEmbedUrl, getYouTubeThumbnail } from '../utils/youtube';\n\ninterface YouTubeEmbedProps {\n  url: string;\n  title?: string;\n  className?: string;\n  onClose?: () => void;\n}\n\nexport const YouTubeEmbed: React.FC<YouTubeEmbedProps> = ({\n  url,\n  title,\n  className = '',\n  onClose\n}) => {\n  const navigate = useNavigate();\n  const { tripId } = useParams<{ tripId: string }>();\n  const [showModal, setShowModal] = useState(false);\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n\n  const embedUrl = getYouTubeEmbedUrl(url);\n  const thumbnailUrl = getYouTubeThumbnail(url, 'maxres') || getYouTubeThumbnail(url, 'high');\n\n  if (!embedUrl) {\n    return (\n      <div className={`text-red-400 text-sm ${className}`}>\n        유효하지 않은 유튜브 URL입니다.\n      </div>\n    );\n  }\n\n  const handleThumbnailClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    setShowModal(true);\n  };\n\n  const handlePlayClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    setIsVideoLoaded(true);\n  };\n\n  const handleModalClose = (e?: React.MouseEvent) => {\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    setShowModal(false);\n    // 모달 닫을 때 비디오 상태 유지 (setIsVideoLoaded(false) 제거)\n    \n    // onClose 콜백이 있으면 실행, 없으면 PlanDetail로 이동\n    if (onClose) {\n      onClose();\n    } else if (tripId) {\n      // tripId가 있으면 해당 trip의 detail 페이지로 이동\n      navigate(`/trips/${tripId}`);\n    }\n  };\n\n  return (\n    <>\n      {/* Thumbnail */}\n      <div \n        className={`relative group cursor-pointer ${className}`}\n        data-youtube-embed\n      >\n        {thumbnailUrl ? (\n          <div className=\"relative youtube-thumbnail\">\n            <img\n              src={thumbnailUrl}\n              alt={title || '유튜브 비디오'}\n              className=\"w-full aspect-video object-cover rounded-lg transition-transform group-hover:scale-105\"\n              onClick={handleThumbnailClick}\n            />\n            {/* Play button overlay */}\n            <div \n              className=\"absolute inset-0 bg-black/30 rounded-lg flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity youtube-play-button\"\n              onClick={handleThumbnailClick}\n            >\n              <div className=\"bg-red-600 rounded-full p-3\">\n                <Play className=\"w-6 h-6 text-white ml-1\" />\n              </div>\n            </div>\n            {/* YouTube icon */}\n            <div className=\"absolute top-2 right-2 bg-red-600 rounded px-2 py-1\">\n              <Youtube className=\"w-4 h-4 text-white\" />\n            </div>\n          </div>\n        ) : (\n          <div \n            className=\"w-full aspect-video bg-gradient-to-br from-red-600/20 to-red-800/20 rounded-lg flex items-center justify-center cursor-pointer hover:from-red-600/30 hover:to-red-800/30 transition-colors youtube-thumbnail\"\n            onClick={handleThumbnailClick}\n          >\n            <div className=\"text-center youtube-play-button\">\n              <Youtube className=\"w-8 h-8 text-red-500 mx-auto mb-2\" />\n              <span className=\"text-white text-sm\">유튜브 비디오</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Modal */}\n      {showModal && createPortal(\n        <div \n          className=\"fixed inset-0 z-[9999] flex items-center justify-center bg-black/90 backdrop-blur-sm p-6 md:p-8 lg:p-12\"\n          onClick={(e) => {\n            // 모달 배경 클릭 시에만 닫기\n            if (e.target === e.currentTarget) {\n              handleModalClose(e);\n            }\n          }}\n        >\n          {/* Close button */}\n          <WaveButton\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => handleModalClose()}\n            className=\"absolute top-6 right-6 md:top-8 md:right-8 lg:top-12 lg:right-12 z-10 bg-black/30 hover:bg-black/50 rounded-full p-3\"\n            ariaLabel=\"닫기\"\n          >\n            <X className=\"w-6 h-6 text-white\" />\n          </WaveButton>\n\n          {/* Video container */}\n          <GlassCard \n            variant=\"travel\" \n            className=\"w-full max-w-5xl mx-auto my-8 md:my-12 lg:my-16 mb-12 md:mb-16 lg:mb-20\"\n            withWaveEffect={true}\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <div className=\"space-y-6 p-2 md:p-4 lg:p-6 pb-4 md:pb-6 lg:pb-8\">\n              {title && (\n                <div className=\"flex items-center space-x-2 mb-6\">\n                  <Youtube className=\"w-5 h-5 text-red-500\" />\n                  <h3 className=\"text-lg md:text-xl font-semibold text-white\">{title}</h3>\n                </div>\n              )}\n              \n              {/* YouTube iframe or thumbnail */}\n              <div className=\"relative w-full aspect-video bg-black rounded-xl overflow-hidden shadow-2xl\">\n                {isVideoLoaded ? (\n                  <iframe\n                    src={`${embedUrl}${embedUrl.includes('?') ? '&' : '?'}autoplay=1&rel=0&modestbranding=1&playsinline=1&enablejsapi=1`}\n                    title={title || \"YouTube video player\"}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                    allowFullScreen\n                    className=\"absolute inset-0 w-full h-full\"\n                  />\n                ) : (\n                  <div className=\"relative w-full h-full\">\n                    {thumbnailUrl ? (\n                      <>\n                        <img\n                          src={thumbnailUrl}\n                          alt={title || '유튜브 비디오'}\n                          className=\"absolute inset-0 w-full h-full object-cover\"\n                        />\n                        {/* Large play button overlay */}\n                        <div \n                          className=\"absolute inset-0 flex items-center justify-center cursor-pointer group youtube-play-button\"\n                          onClick={handlePlayClick}\n                          data-youtube-embed\n                        >\n                          <div className=\"bg-red-600 rounded-full p-6 group-hover:bg-red-700 transition-all transform group-hover:scale-110\">\n                            <Play className=\"w-12 h-12 text-white ml-1\" />\n                          </div>\n                        </div>\n                        {/* YouTube branding */}\n                        <div className=\"absolute bottom-4 right-4\">\n                          <div className=\"bg-red-600 px-2 py-1 rounded flex items-center space-x-1\">\n                            <Youtube className=\"w-4 h-4 text-white\" />\n                            <span className=\"text-white text-sm font-medium\">YouTube</span>\n                          </div>\n                        </div>\n                      </>\n                    ) : (\n                      <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <div \n                          className=\"text-center cursor-pointer youtube-play-button\" \n                          onClick={handlePlayClick}\n                          data-youtube-embed\n                        >\n                          <div className=\"bg-red-600 rounded-full p-6 hover:bg-red-700 transition-colors\">\n                            <Youtube className=\"w-12 h-12 text-white\" />\n                          </div>\n                          <span className=\"text-white text-sm mt-2 block\">비디오 재생</span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n\n              {/* Video info */}\n              <div className=\"flex items-center justify-between text-white/70 text-sm mt-8 pt-6 pb-4 border-t border-white/10\">\n                <span className=\"flex items-center space-x-2\">\n                  <div className=\"w-2 h-2 bg-red-500 rounded-full animate-pulse\"></div>\n                  <span>YouTube에서 재생 중</span>\n                </span>\n                <a\n                  href={url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center space-x-1 hover:text-white transition-colors bg-white/5 hover:bg-white/10 px-3 py-2 rounded-lg\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <Youtube className=\"w-4 h-4\" />\n                  <span>YouTube에서 보기</span>\n                </a>\n              </div>\n            </div>\n          </GlassCard>\n        </div>,\n        document.body\n      )}\n    </>\n  );\n};","import React, { useState } from 'react';\nimport { cn } from '../lib/utils';\nimport { GlassCard } from './GlassCard';\nimport { PhotoModal } from './PhotoModal';\nimport { YouTubeEmbed } from './YouTubeEmbed';\nimport { Plan } from '../types/plan';\nimport { \n  MapPin, \n  Clock, \n  Camera, \n  Utensils, \n  Bed, \n  Car, \n  Star,\n  Edit,\n  Trash2,\n  ExternalLink,\n  Globe,\n  Plane,\n  Navigation\n\n} from 'lucide-react';\n\ninterface PlanCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  plan: Plan;\n  onClick?: (e: React.MouseEvent) => void;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  className?: string;\n  showActions?: boolean;\n}\n\nconst getTypeIcon = (type: Plan['type']) => {\n  switch (type) {\n    case 'attraction':\n      return <Star className=\"w-5 h-5\" />;\n    case 'restaurant':\n      return <Utensils className=\"w-5 h-5\" />;\n    case 'hotel':\n      return <Bed className=\"w-5 h-5\" />;\n    case 'transport':\n      return <Car className=\"w-5 h-5\" />;\n    case 'car':\n      return <Car className=\"w-5 h-5\" />;\n    case 'plane':\n      return <Plane className=\"w-5 h-5\" />;\n    case 'airport':\n      return <Navigation className=\"w-5 h-5\" />;\n    case 'other':\n      return <MapPin className=\"w-5 h-5\" />;\n    default:\n      return <MapPin className=\"w-5 h-5\" />;\n  }\n};\n\nconst getTypeColor = (type: Plan['type']) => {\n  switch (type) {\n    case 'attraction':\n      return 'text-travel-orange';\n    case 'restaurant':\n      return 'text-travel-green';\n    case 'hotel':\n      return 'text-travel-purple';\n    case 'transport':\n      return 'text-travel-blue';\n    case 'car':\n      return 'text-travel-blue';\n    case 'plane':\n      return 'text-travel-blue';\n    case 'airport':\n      return 'text-travel-blue';\n    case 'other':\n      return 'text-white/80';\n    default:\n      return 'text-white/80';\n  }\n};\n\nconst getTypeLabel = (type: Plan['type']) => {\n  switch (type) {\n    case 'attraction':\n      return '관광지';\n    case 'restaurant':\n      return '음식점';\n    case 'hotel':\n      return '숙소';\n    case 'transport':\n      return '대중교통';\n    case 'car':\n      return '자동차';\n    case 'plane':\n      return '비행기';\n    case 'airport':\n      return '공항';\n    case 'other':\n      return '기타';\n    default:\n      return '기타';\n  }\n};\n\nexport const PlanCard: React.FC<PlanCardProps> = ({ \n  plan, \n  onClick, \n  onEdit,\n  onDelete,\n  className,\n  showActions = true,\n  ...props\n}) => {\n  const [isPhotoModalOpen, setIsPhotoModalOpen] = useState(false);\n  const [selectedPhotoIndex, setSelectedPhotoIndex] = useState(0);\n\n  const formatTime = (time: string) => {\n    return time.slice(0, 5); // HH:MM 형식으로 변환\n  };\n\n  const handleCardClick = (e: React.MouseEvent) => {\n    // 액션 버튼, 사진, 유튜브 관련 클릭 시 카드 클릭 이벤트 방지\n    const target = e.target as HTMLElement;\n    if (\n      target.closest('.action-button') ||\n      target.closest('[data-youtube-embed]') ||\n      target.closest('[data-photo-modal]') ||\n      target.closest('iframe') ||\n      target.closest('.youtube-thumbnail') ||\n      target.closest('.youtube-play-button')\n    ) {\n      return;\n    }\n    onClick?.(e);\n  };\n\n  const handlePhotoClick = (e: React.MouseEvent, index: number) => {\n    e.stopPropagation();\n    setSelectedPhotoIndex(index);\n    setIsPhotoModalOpen(true);\n  };\n\n  return (\n    <GlassCard\n      variant=\"light\"\n      hoverable={!!onClick}\n      className={cn(\n        'cursor-pointer group transition-all duration-300',\n        'hover:border-primary-300/40 hover:shadow-lg hover:shadow-primary-500/10',\n        'border border-white/10',\n        className\n      )}\n      onClick={handleCardClick}\n      {...props}\n    >\n      <div className=\"flex items-start space-x-4\">\n        {/* Type Icon */}\n        <div className={cn(\n          'flex-shrink-0 w-12 h-12 rounded-xl flex items-center justify-center',\n          'bg-gradient-to-br from-white/10 to-white/5 border border-white/20',\n          getTypeColor(plan.type)\n        )}>\n          {getTypeIcon(plan.type)}\n        </div>\n        \n        {/* Plan Details */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h4 className=\"text-lg font-semibold text-white truncate group-hover:text-primary-300 transition-colors\">\n              {plan.place_name}\n            </h4>\n            <div className=\"flex items-center space-x-2\">\n              <span className={cn(\n                'text-xs px-2 py-1 rounded-full border',\n                'bg-white/5 border-white/20 text-white/70'\n              )}>\n                {getTypeLabel(plan.type)}\n              </span>\n              \n              {/* Action Buttons */}\n              {showActions && (onEdit || onDelete) && (\n                <div className=\"flex items-center space-x-1 opacity-80 sm:opacity-60 sm:group-hover:opacity-100 transition-opacity\">\n                  {onEdit && (\n                    <button\n                      type=\"button\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onEdit();\n                      }}\n                      className=\"action-button p-2 rounded-lg bg-blue-500/20 hover:bg-blue-500/40 transition-colors\"\n                      aria-label=\"일정 편집\"\n                    >\n                      <Edit className=\"w-3 h-3 text-blue-300\" />\n                    </button>\n                  )}\n                  \n                  {onDelete && (\n                    <button\n                      type=\"button\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        if (window.confirm('이 일정을 삭제하시겠습니까?')) {\n                          onDelete();\n                        }\n                      }}\n                      className=\"action-button p-2 rounded-lg bg-red-500/20 hover:bg-red-500/40 transition-colors\"\n                      aria-label=\"일정 삭제\"\n                    >\n                      <Trash2 className=\"w-3 h-3 text-red-300\" />\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Time */}\n          <div className=\"flex items-center space-x-2 text-white/80 mb-3\">\n            <Clock className=\"w-4 h-4\" />\n            <span className=\"text-sm\">\n              {formatTime(plan.start_time)}\n              {plan.end_time && ` ~ ${formatTime(plan.end_time)}`}\n            </span>\n          </div>\n          \n          {/* Opening Hours */}\n          {plan.opening_hours && (\n            <div className=\"flex items-center space-x-2 text-white/80 mb-2\">\n              <Clock className=\"w-4 h-4 text-travel-green\" />\n              <span className=\"text-sm\">{plan.opening_hours}</span>\n            </div>\n          )}\n          \n          {/* Photos */}\n          {plan.photos && plan.photos.length > 0 && (\n            <div className=\"space-y-2\">\n              {/* Photos header */}\n              <div className=\"flex items-center space-x-2 text-travel-orange\">\n                <Camera className=\"w-4 h-4\" />\n                <span className=\"text-sm\">{plan.photos.length}장의 사진</span>\n              </div>\n              \n              {/* Photos grid */}\n              <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 gap-2\">\n                {plan.photos.slice(0, 4).map((photo, index) => (\n                  <div key={index} className=\"relative group\">\n                    <img\n                      src={photo}\n                      alt={`${plan.place_name} 사진 ${index + 1}`}\n                      className=\"w-full aspect-square object-cover rounded-lg transition-transform group-hover:scale-105 cursor-pointer\"\n                      onClick={(e) => handlePhotoClick(e, index)}\n                    />\n                    {/* 마지막 썸네일에 남은 사진 개수 표시 */}\n                    {index === 3 && plan.photos && plan.photos.length > 4 && (\n                      <div \n                        className=\"absolute inset-0 bg-black/60 rounded-lg flex items-center justify-center cursor-pointer hover:bg-black/70 transition-colors\"\n                        onClick={(e) => handlePhotoClick(e, index)}\n                      >\n                        <span className=\"text-white text-sm font-semibold\">\n                          +{plan.photos.length - 4}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* YouTube Video */}\n          {plan.youtube_link && (\n            <div className=\"mt-3 mb-4\">\n              <YouTubeEmbed\n                url={plan.youtube_link}\n                title={`${plan.place_name} 비디오`}\n                className=\"w-full\"\n              />\n            </div>\n          )}\n          \n          {/* Location and External Links */}\n          <div className={`flex items-center justify-between ${plan.youtube_link ? 'mt-2' : 'mt-4'}`}>\n            <div className=\"flex items-center space-x-2\">\n              {plan.latitude && plan.longitude && (\n                <div className=\"flex items-center space-x-1 text-travel-blue\">\n                  <MapPin className=\"w-4 h-4\" />\n                  <span className=\"text-xs text-white/60\">\n                    {Number(plan.latitude).toFixed(4)}, {Number(plan.longitude).toFixed(4)}\n                  </span>\n                </div>\n              )}\n              \n              {/* 지도 URL이 있지만 좌표가 없는 경우 */}\n              {plan.map_url && !plan.latitude && !plan.longitude && (\n                <div className=\"flex items-center space-x-1 text-yellow-400\">\n                  <MapPin className=\"w-4 h-4\" />\n                  <span className=\"text-xs\">지도 링크만 있음</span>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              {plan.website && (\n                <a\n                  href={plan.website}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  onClick={(e) => e.stopPropagation()}\n                  className=\"flex items-center space-x-1 text-travel-purple hover:text-travel-purple/80 transition-colors\"\n                >\n                  <Globe className=\"w-4 h-4\" />\n                  <span className=\"text-xs\">홈페이지</span>\n                </a>\n              )}\n              \n              {plan.youtube_link && (\n                <a\n                  href={plan.youtube_link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  onClick={(e) => e.stopPropagation()}\n                  className=\"flex items-center space-x-1 text-travel-orange hover:text-travel-orange/80 transition-colors\"\n                >\n                  <ExternalLink className=\"w-4 h-4\" />\n                  <span className=\"text-xs\">유튜브</span>\n                </a>\n              )}\n              \n              {plan.map_url && (\n                <a\n                  href={plan.map_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  onClick={(e) => e.stopPropagation()}\n                  className=\"flex items-center space-x-1 text-travel-green hover:text-travel-green/80 transition-colors\"\n                >\n                  <ExternalLink className=\"w-4 h-4\" />\n                  <span className=\"text-xs\">\n                    {(() => {\n                      // 지도 서비스 종류에 따라 다른 텍스트 표시\n                      const url = plan.map_url.toLowerCase();\n                      if (url.includes('google.com') || url.includes('goo.gl')) return 'Google지도';\n                      if (url.includes('naver.com')) return 'Naver지도';\n                      if (url.includes('kakao.com')) return 'Kakao지도';\n                      if (url.includes('apple.com')) return 'Apple지도';\n                      return '지도';\n                    })()}\n                  </span>\n                </a>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Photo Modal */}\n      {plan.photos && plan.photos.length > 0 && (\n        <PhotoModal\n          photos={plan.photos}\n          isOpen={isPhotoModalOpen}\n          onClose={() => setIsPhotoModalOpen(false)}\n          initialIndex={selectedPhotoIndex}\n          placeName={plan.place_name}\n        />\n      )}\n    </GlassCard>\n  );\n};"],"names":["PhotoModal","photos","isOpen","onClose","initialIndex","placeName","currentIndex","setCurrentIndex","useState","useEffect","handleKeyDown","e","goToPrevious","goToNext","prev","jsxs","jsx","WaveButton","X","Fragment","ChevronLeft","ChevronRight","GlassCard","photo","index","getYouTubeEmbedUrl","url","urlObj","videoId","timeParam","startTime","seconds","error","getYouTubeVideoId","embedUrl","match","getYouTubeThumbnail","quality","YouTubeEmbed","title","className","navigate","useNavigate","tripId","useParams","showModal","setShowModal","isVideoLoaded","setIsVideoLoaded","thumbnailUrl","handleThumbnailClick","handlePlayClick","handleModalClose","Play","Youtube","createPortal","getTypeIcon","type","Star","Utensils","Bed","Car","Plane","Navigation","MapPin","getTypeColor","getTypeLabel","PlanCard","plan","onClick","onEdit","onDelete","showActions","props","isPhotoModalOpen","setIsPhotoModalOpen","selectedPhotoIndex","setSelectedPhotoIndex","formatTime","time","handleCardClick","target","handlePhotoClick","cn","Edit","Trash2","Clock","Camera","Globe","ExternalLink"],"mappings":"iSAaO,MAAMA,EAAwC,CAAC,CACpD,OAAAC,EACA,OAAAC,EACA,QAAAC,EACA,aAAAC,EAAe,EACf,UAAAC,EAAY,EACd,IAAM,CACJ,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAASJ,CAAY,EAG7DK,EAAAA,UAAU,IAAM,CACVP,GACFK,EAAgBH,CAAY,CAEhC,EAAG,CAACF,EAAQE,CAAY,CAAC,EAGzBK,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAiBC,GAAqB,CAC1C,GAAKT,EAEL,OAAQS,EAAE,IAAA,CACR,IAAK,SACHR,EAAA,EACA,MACF,IAAK,YACHS,EAAA,EACA,MACF,IAAK,aACHC,EAAA,EACA,KAAA,CAEN,EAEA,cAAO,iBAAiB,UAAWH,CAAa,EACzC,IAAM,OAAO,oBAAoB,UAAWA,CAAa,CAClE,EAAG,CAACR,EAAQI,EAAcL,EAAO,MAAM,CAAC,EAExC,MAAMY,EAAW,IAAM,CACrBN,EAAiBO,IAAUA,EAAO,GAAKb,EAAO,MAAM,CACtD,EAEMW,EAAe,IAAM,CACzBL,EAAiBO,IAAUA,EAAO,EAAIb,EAAO,QAAUA,EAAO,MAAM,CACtE,EAEA,MAAI,CAACC,GAAUD,EAAO,SAAW,EAAU,KAGzCc,EAAAA,KAAC,MAAA,CAAI,UAAU,mFAEb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAASd,EACT,UAAU,6EACV,UAAU,KAEV,SAAAa,EAAAA,IAACE,EAAA,CAAE,UAAU,oBAAA,CAAqB,CAAA,CAAA,EAInCjB,EAAO,OAAS,GACfc,EAAAA,KAAAI,EAAAA,SAAA,CACE,SAAA,CAAAH,EAAAA,IAACC,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAASL,EACT,UAAU,+FACV,UAAU,QAEV,SAAAI,EAAAA,IAACI,EAAA,CAAY,UAAU,oBAAA,CAAqB,CAAA,CAAA,EAG9CJ,EAAAA,IAACC,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAASJ,EACT,UAAU,gGACV,UAAU,QAEV,SAAAG,EAAAA,IAACK,EAAA,CAAa,UAAU,oBAAA,CAAqB,CAAA,CAAA,CAC/C,EACF,EAIFN,EAAAA,KAAC,MAAA,CAAI,UAAU,qEAEb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAAA,IAAC,MAAA,CACC,IAAKf,EAAOK,CAAY,EACxB,IAAK,GAAGD,CAAS,OAAOC,EAAe,CAAC,GACxC,UAAU,8DAAA,CAAA,EAEd,EAGAU,EAAAA,IAACM,GAAU,QAAQ,QAAQ,UAAU,WACnC,SAAAP,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACZ,SAAA,CAAAV,GACCW,EAAAA,IAAC,KAAA,CAAG,UAAU,mCACX,SAAAX,EACH,EAEFW,MAAC,MAAA,CAAI,UAAU,mEACb,gBAAC,OAAA,CAAM,SAAA,CAAAV,EAAe,EAAE,MAAIL,EAAO,MAAA,CAAA,CAAO,CAAA,CAC5C,EAGCA,EAAO,OAAS,GACfe,EAAAA,IAAC,MAAA,CAAI,UAAU,gEACZ,SAAAf,EAAO,IAAI,CAACsB,EAAOC,IAClBR,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAMT,EAAgBiB,CAAK,EACpC,UAAW,8EACTA,IAAUlB,EACN,oCACA,8BACN,GAEA,SAAAU,EAAAA,IAAC,MAAA,CACC,IAAKO,EACL,IAAK,OAAOC,EAAQ,CAAC,GACrB,UAAU,4BAAA,CAAA,CACZ,EAZKA,CAAA,CAcR,CAAA,CACH,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,EACF,EAGAR,EAAAA,IAAC,MAAA,CACC,UAAU,yBACV,QAASb,CAAA,CAAA,CACX,EACF,CAEJ,EC1JasB,EAAsBC,GAA+B,CAChE,GAAI,CACF,MAAMC,EAAS,IAAI,IAAID,CAAG,EAG1B,IAAIE,EAAyB,KAqB7B,GAlBID,EAAO,WAAa,WACtBC,EAAUD,EAAO,SAAS,MAAM,CAAC,GAG1BA,EAAO,WAAa,mBAAqBA,EAAO,WAAa,iBAChEA,EAAO,WAAa,SACtBC,EAAUD,EAAO,aAAa,IAAI,GAAG,EAG9BA,EAAO,SAAS,WAAW,SAAS,EAC3CC,EAAUD,EAAO,SAAS,MAAM,CAAC,EAG1BA,EAAO,SAAS,WAAW,KAAK,IACvCC,EAAUD,EAAO,SAAS,MAAM,CAAC,IAIjCC,EAAS,CAEX,MAAMC,EAAYF,EAAO,aAAa,IAAI,GAAG,GAAKA,EAAO,aAAa,IAAI,OAAO,EACjF,IAAIG,EAAY,GAEhB,GAAID,EAAW,CAEb,MAAME,EAAU,SAASF,EAAU,QAAQ,SAAU,EAAE,CAAC,EACnD,MAAME,CAAO,IAChBD,EAAY,UAAUC,CAAO,GAEjC,CAEA,MAAO,iCAAiCH,CAAO,GAAGE,CAAS,EAC7D,CAEA,OAAO,IACT,OAASE,EAAO,CACd,eAAQ,MAAM,uBAAwBA,CAAK,EACpC,IACT,CACF,EAGaC,EAAqBP,GAA+B,CAC/D,MAAMQ,EAAWT,EAAmBC,CAAG,EACvC,GAAIQ,EAAU,CACZ,MAAMC,EAAQD,EAAS,MAAM,kBAAkB,EAC/C,OAAOC,EAAQA,EAAM,CAAC,EAAI,IAC5B,CACA,OAAO,IACT,EAGaC,EAAsB,CAACV,EAAaW,EAAiE,WAA4B,CAC5I,MAAMT,EAAUK,EAAkBP,CAAG,EACrC,OAAIE,EACK,8BAA8BA,CAAO,IAAIS,CAAO,cAElD,IACT,ECpDaC,EAA4C,CAAC,CACxD,IAAAZ,EACA,MAAAa,EACA,UAAAC,EAAY,GACZ,QAAArC,CACF,IAAM,CACJ,MAAMsC,EAAWC,EAAA,EACX,CAAE,OAAAC,CAAA,EAAWC,EAAA,EACb,CAACC,EAAWC,CAAY,EAAItC,EAAAA,SAAS,EAAK,EAC1C,CAACuC,EAAeC,CAAgB,EAAIxC,EAAAA,SAAS,EAAK,EAElD0B,EAAWT,EAAmBC,CAAG,EACjCuB,EAAeb,EAAoBV,EAAK,QAAQ,GAAKU,EAAoBV,EAAK,MAAM,EAE1F,GAAI,CAACQ,EACH,aACG,MAAA,CAAI,UAAW,wBAAwBM,CAAS,GAAI,SAAA,sBAErD,EAIJ,MAAMU,EAAwBvC,GAAwB,CACpDA,EAAE,gBAAA,EACFA,EAAE,eAAA,EACFmC,EAAa,EAAI,CACnB,EAEMK,EAAmBxC,GAAwB,CAC/CA,EAAE,gBAAA,EACFA,EAAE,eAAA,EACFqC,EAAiB,EAAI,CACvB,EAEMI,EAAoBzC,GAAyB,CAC7CA,IACFA,EAAE,gBAAA,EACFA,EAAE,eAAA,GAEJmC,EAAa,EAAK,EAId3C,EACFA,EAAA,EACSwC,GAETF,EAAS,UAAUE,CAAM,EAAE,CAE/B,EAEA,OACE5B,EAAAA,KAAAI,WAAA,CAEE,SAAA,CAAAH,EAAAA,IAAC,MAAA,CACC,UAAW,iCAAiCwB,CAAS,GACrD,qBAAkB,GAEjB,SAAAS,EACClC,OAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CACC,IAAKiC,EACL,IAAKV,GAAS,UACd,UAAU,yFACV,QAASW,CAAA,CAAA,EAGXlC,EAAAA,IAAC,MAAA,CACC,UAAU,oJACV,QAASkC,EAET,SAAAlC,EAAAA,IAAC,OAAI,UAAU,8BACb,eAACqC,EAAA,CAAK,UAAU,0BAA0B,CAAA,CAC5C,CAAA,CAAA,EAGFrC,EAAAA,IAAC,OAAI,UAAU,sDACb,eAACsC,EAAA,CAAQ,UAAU,qBAAqB,CAAA,CAC1C,CAAA,CAAA,CACF,EAEAtC,EAAAA,IAAC,MAAA,CACC,UAAU,+MACV,QAASkC,EAET,SAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAC,EAAAA,IAACsC,EAAA,CAAQ,UAAU,mCAAA,CAAoC,EACvDtC,EAAAA,IAAC,OAAA,CAAK,UAAU,qBAAqB,SAAA,SAAA,CAAO,CAAA,CAAA,CAC9C,CAAA,CAAA,CACF,CAAA,EAKH6B,GAAaU,EAAAA,aACZxC,EAAAA,KAAC,MAAA,CACC,UAAU,0GACV,QAAUJ,GAAM,CAEVA,EAAE,SAAWA,EAAE,eACjByC,EAAiBzC,CAAC,CAEtB,EAGA,SAAA,CAAAK,EAAAA,IAACC,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAMmC,EAAA,EACf,UAAU,uHACV,UAAU,KAEV,SAAApC,EAAAA,IAACE,EAAA,CAAE,UAAU,oBAAA,CAAqB,CAAA,CAAA,EAIpCF,EAAAA,IAACM,EAAA,CACC,QAAQ,SACR,UAAU,0EACV,eAAgB,GAChB,QAAUX,GAAM,CACdA,EAAE,gBAAA,CACJ,EAEA,SAAAI,EAAAA,KAAC,MAAA,CAAI,UAAU,mDACZ,SAAA,CAAAwB,GACCxB,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAC,EAAAA,IAACsC,EAAA,CAAQ,UAAU,sBAAA,CAAuB,EAC1CtC,EAAAA,IAAC,KAAA,CAAG,UAAU,8CAA+C,SAAAuB,CAAA,CAAM,CAAA,EACrE,EAIFvB,EAAAA,IAAC,MAAA,CAAI,UAAU,8EACZ,SAAA+B,EACC/B,EAAAA,IAAC,SAAA,CACC,IAAK,GAAGkB,CAAQ,GAAGA,EAAS,SAAS,GAAG,EAAI,IAAM,GAAG,gEACrD,MAAOK,GAAS,uBAChB,YAAY,IACZ,MAAM,sGACN,gBAAe,GACf,UAAU,gCAAA,CAAA,EAGZvB,MAAC,MAAA,CAAI,UAAU,yBACZ,WACCD,EAAAA,KAAAI,WAAA,CACE,SAAA,CAAAH,EAAAA,IAAC,MAAA,CACC,IAAKiC,EACL,IAAKV,GAAS,UACd,UAAU,6CAAA,CAAA,EAGZvB,EAAAA,IAAC,MAAA,CACC,UAAU,6FACV,QAASmC,EACT,qBAAkB,GAElB,SAAAnC,EAAAA,IAAC,OAAI,UAAU,oGACb,eAACqC,EAAA,CAAK,UAAU,4BAA4B,CAAA,CAC9C,CAAA,CAAA,QAGD,MAAA,CAAI,UAAU,4BACb,SAAAtC,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACb,SAAA,CAAAC,EAAAA,IAACsC,EAAA,CAAQ,UAAU,oBAAA,CAAqB,EACxCtC,EAAAA,IAAC,OAAA,CAAK,UAAU,iCAAiC,SAAA,SAAA,CAAO,CAAA,CAAA,CAC1D,CAAA,CACF,CAAA,CAAA,CACF,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,oDACb,SAAAD,EAAAA,KAAC,MAAA,CACC,UAAU,iDACV,QAASoC,EACT,qBAAkB,GAElB,SAAA,CAAAnC,EAAAA,IAAC,OAAI,UAAU,iEACb,eAACsC,EAAA,CAAQ,UAAU,uBAAuB,CAAA,CAC5C,EACAtC,EAAAA,IAAC,OAAA,CAAK,UAAU,gCAAgC,SAAA,QAAA,CAAM,CAAA,CAAA,CAAA,CACxD,CACF,EAEJ,EAEJ,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,kGACb,SAAA,CAAAA,EAAAA,KAAC,OAAA,CAAK,UAAU,8BACd,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,+CAAA,CAAgD,EAC/DA,EAAAA,IAAC,QAAK,SAAA,gBAAA,CAAc,CAAA,EACtB,EACAD,EAAAA,KAAC,IAAA,CACC,KAAMW,EACN,OAAO,SACP,IAAI,sBACJ,UAAU,mHACV,QAAUf,GAAMA,EAAE,gBAAA,EAElB,SAAA,CAAAK,EAAAA,IAACsC,EAAA,CAAQ,UAAU,SAAA,CAAU,EAC7BtC,EAAAA,IAAC,QAAK,SAAA,cAAA,CAAY,CAAA,CAAA,CAAA,CACpB,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEF,SAAS,IAAA,CACX,EACF,CAEJ,ECnMMwC,EAAeC,GAAuB,CAC1C,OAAQA,EAAA,CACN,IAAK,aACH,OAAOzC,EAAAA,IAAC0C,EAAA,CAAK,UAAU,SAAA,CAAU,EACnC,IAAK,aACH,OAAO1C,EAAAA,IAAC2C,EAAA,CAAS,UAAU,SAAA,CAAU,EACvC,IAAK,QACH,OAAO3C,EAAAA,IAAC4C,EAAA,CAAI,UAAU,SAAA,CAAU,EAClC,IAAK,YACH,OAAO5C,EAAAA,IAAC6C,EAAA,CAAI,UAAU,SAAA,CAAU,EAClC,IAAK,MACH,OAAO7C,EAAAA,IAAC6C,EAAA,CAAI,UAAU,SAAA,CAAU,EAClC,IAAK,QACH,OAAO7C,EAAAA,IAAC8C,EAAA,CAAM,UAAU,SAAA,CAAU,EACpC,IAAK,UACH,OAAO9C,EAAAA,IAAC+C,EAAA,CAAW,UAAU,SAAA,CAAU,EACzC,IAAK,QACH,OAAO/C,EAAAA,IAACgD,EAAA,CAAO,UAAU,SAAA,CAAU,EACrC,QACE,OAAOhD,EAAAA,IAACgD,EAAA,CAAO,UAAU,SAAA,CAAU,CAAA,CAEzC,EAEMC,EAAgBR,GAAuB,CAC3C,OAAQA,EAAA,CACN,IAAK,aACH,MAAO,qBACT,IAAK,aACH,MAAO,oBACT,IAAK,QACH,MAAO,qBACT,IAAK,YACH,MAAO,mBACT,IAAK,MACH,MAAO,mBACT,IAAK,QACH,MAAO,mBACT,IAAK,UACH,MAAO,mBACT,IAAK,QACH,MAAO,gBACT,QACE,MAAO,eAAA,CAEb,EAEMS,EAAgBT,GAAuB,CAC3C,OAAQA,EAAA,CACN,IAAK,aACH,MAAO,MACT,IAAK,aACH,MAAO,MACT,IAAK,QACH,MAAO,KACT,IAAK,YACH,MAAO,OACT,IAAK,MACH,MAAO,MACT,IAAK,QACH,MAAO,MACT,IAAK,UACH,MAAO,KACT,IAAK,QACH,MAAO,KACT,QACE,MAAO,IAAA,CAEb,EAEaU,GAAoC,CAAC,CAChD,KAAAC,EACA,QAAAC,EACA,OAAAC,EACA,SAAAC,EACA,UAAA/B,EACA,YAAAgC,EAAc,GACd,GAAGC,CACL,IAAM,CACJ,KAAM,CAACC,EAAkBC,CAAmB,EAAInE,EAAAA,SAAS,EAAK,EACxD,CAACoE,EAAoBC,CAAqB,EAAIrE,EAAAA,SAAS,CAAC,EAExDsE,EAAcC,GACXA,EAAK,MAAM,EAAG,CAAC,EAGlBC,EAAmBrE,GAAwB,CAE/C,MAAMsE,EAAStE,EAAE,OAEfsE,EAAO,QAAQ,gBAAgB,GAC/BA,EAAO,QAAQ,sBAAsB,GACrCA,EAAO,QAAQ,oBAAoB,GACnCA,EAAO,QAAQ,QAAQ,GACvBA,EAAO,QAAQ,oBAAoB,GACnCA,EAAO,QAAQ,sBAAsB,GAIvCZ,IAAU1D,CAAC,CACb,EAEMuE,EAAmB,CAACvE,EAAqBa,IAAkB,CAC/Db,EAAE,gBAAA,EACFkE,EAAsBrD,CAAK,EAC3BmD,EAAoB,EAAI,CAC1B,EAEA,OACE5D,EAAAA,KAACO,EAAA,CACC,QAAQ,QACR,UAAW,CAAC,CAAC+C,EACb,UAAWc,EACT,mDACA,0EACA,yBACA3C,CAAA,EAEF,QAASwC,EACR,GAAGP,EAEJ,SAAA,CAAA1D,EAAAA,KAAC,MAAA,CAAI,UAAU,6BAEb,SAAA,CAAAC,MAAC,OAAI,UAAWmE,EACd,sEACA,oEACAlB,EAAaG,EAAK,IAAI,CAAA,EAErB,SAAAZ,EAAYY,EAAK,IAAI,CAAA,CACxB,EAGArD,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,2FACX,SAAAoD,EAAK,WACR,EACArD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,MAAC,QAAK,UAAWmE,EACf,wCACA,0CAAA,EAEC,SAAAjB,EAAaE,EAAK,IAAI,CAAA,CACzB,EAGCI,IAAgBF,GAAUC,IACzBxD,EAAAA,KAAC,MAAA,CAAI,UAAU,qGACZ,SAAA,CAAAuD,GACCtD,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAUL,GAAM,CACdA,EAAE,gBAAA,EACF2D,EAAA,CACF,EACA,UAAU,qFACV,aAAW,QAEX,SAAAtD,EAAAA,IAACoE,EAAA,CAAK,UAAU,uBAAA,CAAwB,CAAA,CAAA,EAI3Cb,GACCvD,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAUL,GAAM,CACdA,EAAE,gBAAA,EACE,OAAO,QAAQ,iBAAiB,GAClC4D,EAAA,CAEJ,EACA,UAAU,mFACV,aAAW,QAEX,SAAAvD,EAAAA,IAACqE,EAAA,CAAO,UAAU,sBAAA,CAAuB,CAAA,CAAA,CAC3C,CAAA,CAEJ,CAAA,CAAA,CAEJ,CAAA,EACF,EAGAtE,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAC,EAAAA,IAACsE,EAAA,CAAM,UAAU,SAAA,CAAU,EAC3BvE,EAAAA,KAAC,OAAA,CAAK,UAAU,UACb,SAAA,CAAA+D,EAAWV,EAAK,UAAU,EAC1BA,EAAK,UAAY,MAAMU,EAAWV,EAAK,QAAQ,CAAC,EAAA,CAAA,CACnD,CAAA,EACF,EAGCA,EAAK,eACJrD,OAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAC,EAAAA,IAACsE,EAAA,CAAM,UAAU,2BAAA,CAA4B,EAC7CtE,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAW,WAAK,aAAA,CAAc,CAAA,EAChD,EAIDoD,EAAK,QAAUA,EAAK,OAAO,OAAS,GACnCrD,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAC,EAAAA,IAACuE,EAAA,CAAO,UAAU,SAAA,CAAU,EAC5BxE,EAAAA,KAAC,OAAA,CAAK,UAAU,UAAW,SAAA,CAAAqD,EAAK,OAAO,OAAO,OAAA,CAAA,CAAK,CAAA,EACrD,QAGC,MAAA,CAAI,UAAU,uDACZ,SAAAA,EAAK,OAAO,MAAM,EAAG,CAAC,EAAE,IAAI,CAAC7C,EAAOC,IACnCT,EAAAA,KAAC,MAAA,CAAgB,UAAU,iBACzB,SAAA,CAAAC,EAAAA,IAAC,MAAA,CACC,IAAKO,EACL,IAAK,GAAG6C,EAAK,UAAU,OAAO5C,EAAQ,CAAC,GACvC,UAAU,yGACV,QAAUb,GAAMuE,EAAiBvE,EAAGa,CAAK,CAAA,CAAA,EAG1CA,IAAU,GAAK4C,EAAK,QAAUA,EAAK,OAAO,OAAS,GAClDpD,EAAAA,IAAC,MAAA,CACC,UAAU,8HACV,QAAUL,GAAMuE,EAAiBvE,EAAGa,CAAK,EAEzC,SAAAT,EAAAA,KAAC,OAAA,CAAK,UAAU,mCAAmC,SAAA,CAAA,IAC/CqD,EAAK,OAAO,OAAS,CAAA,CAAA,CACzB,CAAA,CAAA,CACF,CAAA,EAhBM5C,CAkBV,CACD,CAAA,CACH,CAAA,EACF,EAID4C,EAAK,cACJpD,MAAC,MAAA,CAAI,UAAU,YACb,SAAAA,EAAAA,IAACsB,EAAA,CACC,IAAK8B,EAAK,aACV,MAAO,GAAGA,EAAK,UAAU,OACzB,UAAU,QAAA,CAAA,EAEd,EAIFrD,EAAAA,KAAC,OAAI,UAAW,qCAAqCqD,EAAK,aAAe,OAAS,MAAM,GACtF,SAAA,CAAArD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAqD,EAAK,UAAYA,EAAK,WACrBrD,EAAAA,KAAC,MAAA,CAAI,UAAU,+CACb,SAAA,CAAAC,EAAAA,IAACgD,EAAA,CAAO,UAAU,SAAA,CAAU,EAC5BjD,EAAAA,KAAC,OAAA,CAAK,UAAU,wBACb,SAAA,CAAA,OAAOqD,EAAK,QAAQ,EAAE,QAAQ,CAAC,EAAE,KAAG,OAAOA,EAAK,SAAS,EAAE,QAAQ,CAAC,CAAA,CAAA,CACvE,CAAA,EACF,EAIDA,EAAK,SAAW,CAACA,EAAK,UAAY,CAACA,EAAK,WACvCrD,EAAAA,KAAC,MAAA,CAAI,UAAU,8CACb,SAAA,CAAAC,EAAAA,IAACgD,EAAA,CAAO,UAAU,SAAA,CAAU,EAC5BhD,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,WAAA,CAAS,CAAA,CAAA,CACrC,CAAA,EAEJ,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAqD,EAAK,SACJrD,EAAAA,KAAC,IAAA,CACC,KAAMqD,EAAK,QACX,OAAO,SACP,IAAI,sBACJ,QAAUzD,GAAMA,EAAE,gBAAA,EAClB,UAAU,+FAEV,SAAA,CAAAK,EAAAA,IAACwE,EAAA,CAAM,UAAU,SAAA,CAAU,EAC3BxE,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,MAAA,CAAI,CAAA,CAAA,CAAA,EAIjCoD,EAAK,cACJrD,EAAAA,KAAC,IAAA,CACC,KAAMqD,EAAK,aACX,OAAO,SACP,IAAI,sBACJ,QAAUzD,GAAMA,EAAE,gBAAA,EAClB,UAAU,+FAEV,SAAA,CAAAK,EAAAA,IAACyE,EAAA,CAAa,UAAU,SAAA,CAAU,EAClCzE,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,KAAA,CAAG,CAAA,CAAA,CAAA,EAIhCoD,EAAK,SACJrD,EAAAA,KAAC,IAAA,CACC,KAAMqD,EAAK,QACX,OAAO,SACP,IAAI,sBACJ,QAAUzD,GAAMA,EAAE,gBAAA,EAClB,UAAU,6FAEV,SAAA,CAAAK,EAAAA,IAACyE,EAAA,CAAa,UAAU,SAAA,CAAU,EAClCzE,EAAAA,IAAC,OAAA,CAAK,UAAU,UACZ,UAAA,IAAM,CAEN,MAAMU,EAAM0C,EAAK,QAAQ,YAAA,EACzB,OAAI1C,EAAI,SAAS,YAAY,GAAKA,EAAI,SAAS,QAAQ,EAAU,WAC7DA,EAAI,SAAS,WAAW,EAAU,UAClCA,EAAI,SAAS,WAAW,EAAU,UAClCA,EAAI,SAAS,WAAW,EAAU,UAC/B,IACT,IAAG,CACL,CAAA,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGC0C,EAAK,QAAUA,EAAK,OAAO,OAAS,GACnCpD,EAAAA,IAAChB,EAAA,CACC,OAAQoE,EAAK,OACb,OAAQM,EACR,QAAS,IAAMC,EAAoB,EAAK,EACxC,aAAcC,EACd,UAAWR,EAAK,UAAA,CAAA,CAClB,CAAA,CAAA,CAIR"}