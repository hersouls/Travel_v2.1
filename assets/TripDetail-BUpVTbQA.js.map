{"version":3,"file":"TripDetail-BUpVTbQA.js","sources":["../../src/pages/TripDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts';\nimport { DayNavigationCallback, NavigationCallback } from '../utils/navigationCallback';\nimport { GlassCard } from '../components/GlassCard';\nimport { WaveButton } from '../components/WaveButton';\nimport { Header } from '../components/Header';\nimport { Footer } from '../components/Footer';\nimport { PlanCard } from '../components/PlanCard';\nimport { \n  Plus, \n  MapPin, \n  Calendar, \n  Image,\n  ArrowLeft,\n  Edit\n} from 'lucide-react';\nimport { doc, deleteDoc, collection, query, where, onSnapshot } from 'firebase/firestore';\nimport { db } from '../lib/firebase';\nimport { Trip } from '../types/trip';\nimport { Plan } from '../types/plan';\n\nexport const TripDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  const [trip, setTrip] = useState<Trip | null>(null);\n  const [plans, setPlans] = useState<Plan[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedDay, setSelectedDay] = useState(1);\n\n  useEffect(() => {\n    if (!id || !user) return;\n\n    // Trip 데이터 구독\n    const tripUnsubscribe = onSnapshot(\n      doc(db, 'trips', id),\n      (doc) => {\n        if (doc.exists()) {\n          const tripData = { id: doc.id, ...doc.data() } as Trip;\n          if (tripData.user_id !== user.uid) {\n            setError('접근 권한이 없습니다.');\n            setLoading(false);\n            return;\n          }\n          setTrip(tripData);\n        } else {\n          setError('여행을 찾을 수 없습니다.');\n        }\n        setLoading(false);\n      },\n      (error) => {\n        console.error('Trip 로딩 실패:', error);\n        setError('여행 데이터를 불러오는데 실패했습니다.');\n        setLoading(false);\n      }\n    );\n\n    // Plans 데이터 구독 (인덱스 불필요하도록 단순화)\n    const plansQuery = query(\n      collection(db, 'plans'),\n      where('trip_id', '==', id)\n    );\n\n    const plansUnsubscribe = onSnapshot(\n      plansQuery,\n      (snapshot) => {\n        const plansData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as Plan[];\n        \n        // 클라이언트 사이드에서 정렬\n        const sortedPlans = plansData.sort((a, b) => {\n          if (a.day !== b.day) {\n            return a.day - b.day;\n          }\n          return a.start_time.localeCompare(b.start_time);\n        });\n        \n        setPlans(sortedPlans);\n      },\n      (error) => {\n        console.error('Plans 로딩 실패:', error);\n      }\n    );\n\n    return () => {\n      tripUnsubscribe();\n      plansUnsubscribe();\n    };\n  }, [id, user]);\n\n  // URL fragment를 통한 Day 자동 선택\n  useEffect(() => {\n    if (location.hash && trip) {\n      const dayMatch = location.hash.match(/^#day-(\\d+)$/);\n      if (dayMatch) {\n        const dayNumber = parseInt(dayMatch[1]);\n        const totalDays = getTripDuration();\n        if (dayNumber >= 1 && dayNumber <= totalDays) {\n          setSelectedDay(dayNumber);\n          // 해시를 제거하여 URL을 깔끔하게 유지\n          window.history.replaceState(null, '', location.pathname);\n        }\n      }\n    }\n  }, [location.hash, trip]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-white text-lg\">로딩 중...</div>\n      </div>\n    );\n  }\n\n  if (error || !trip) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center p-6\">\n        <GlassCard variant=\"travel\" className=\"text-center\">\n          <p className=\"text-white mb-4\">{error || '여행을 찾을 수 없습니다.'}</p>\n          <WaveButton onClick={() => navigate('/')}>\n            Back\n          </WaveButton>\n        </GlassCard>\n      </div>\n    );\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('ko-KR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatKoreanDateLabel = (dateString: string) => {\n    if (!dateString) return '';\n    const [year, month, day] = dateString.split('-');\n    const date = new Date(Number(year), Number(month) - 1, Number(day));\n    const weekdays = ['일', '월', '화', '수', '목', '금', '토'];\n    const weekday = weekdays[date.getDay()];\n    const mm = month.padStart(2, '0');\n    const dd = day.padStart(2, '0');\n    return `${year}.${mm}.${dd}.${weekday}`;\n  };\n\n  const getTripDuration = () => {\n    const start = new Date(trip.start_date);\n    const end = new Date(trip.end_date);\n    const diffTime = Math.abs(end.getTime() - start.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\n  };\n\n  const getDayWithDate = (dayNumber: number) => {\n    if (!trip) return `Day ${dayNumber}`;\n    \n    const start = new Date(trip.start_date);\n    const targetDate = new Date(start);\n    targetDate.setDate(start.getDate() + dayNumber - 1);\n    \n    const year = targetDate.getFullYear();\n    const month = String(targetDate.getMonth() + 1).padStart(2, '0');\n    const date = String(targetDate.getDate()).padStart(2, '0');\n    const dayNames = ['일', '월', '화', '수', '목', '금', '토'];\n    const dayName = dayNames[targetDate.getDay()];\n    \n    return `${year}.${month}.${date}.${dayName}`;\n  };\n\n  const getDayPlans = (day: number) => {\n    return plans.filter(plan => plan.day === day);\n  };\n\n  const days = Array.from({ length: getTripDuration() }, (_, i) => i + 1);\n\n  const handleAddPlan = () => {\n    const callbackUrl = DayNavigationCallback.createDayCallback(\n      `/trips/${id}/plans/new?day=${selectedDay}`,\n      id!,\n      selectedDay\n    );\n    navigate(callbackUrl);\n  };\n\n  const handlePlanClick = (plan: Plan) => {\n    // 카드 클릭 시 편집 모드로 이동 (강화된 콜백 시스템)\n    const callbackUrl = DayNavigationCallback.createDayCallback(\n      `/trips/${id}/plans/${plan.id}`,\n      id!,\n      selectedDay\n    );\n    navigate(callbackUrl);\n  };\n\n  const handlePlanEdit = (plan: Plan) => {\n    // 편집 버튼 클릭 시 편집 모드로 이동 (강화된 콜백 시스템)\n    const callbackUrl = DayNavigationCallback.createDayCallback(\n      `/trips/${id}/plans/${plan.id}`,\n      id!,\n      selectedDay\n    );\n    navigate(callbackUrl);\n  };\n\n  const handlePlanDelete = async (plan: Plan) => {\n    if (!plan.id) return;\n\n    try {\n      await deleteDoc(doc(db, 'plans', plan.id));\n    } catch (error) {\n      console.error('일정 삭제 실패:', error);\n      alert('일정 삭제에 실패했습니다.');\n    }\n  };\n\n\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      {/* Main Content */}\n      <div className=\"pt-20 px-4 pb-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Back Button */}\n          <div className=\"mb-4\">\n            <WaveButton\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => navigate('/')}\n              className=\"flex items-center gap-2\"\n            >\n              <ArrowLeft className=\"w-4 h-4\" />\n              Back\n            </WaveButton>\n          </div>\n          \n          {/* Trip Info Card */}\n          <GlassCard \n            variant=\"travel\" \n            withWaveEffect={true}\n            hoverable={true}\n            className=\"mb-6 animate-fade-in wave-optimized\"\n            style={{ animationDelay: '0.1s' }}\n          >\n            {/* Header with Title and Edit Button */}\n            <div className=\"flex items-center justify-between mb-4\">\n              <div>\n                <h1 className=\"text-xl md:text-2xl lg:text-3xl font-bold text-white moonwave-glow break-words\">\n                  {trip.title}\n                </h1>\n                <p className=\"text-white/60 text-sm mt-1\">\n                  {formatKoreanDateLabel(trip.start_date)} ~ {formatKoreanDateLabel(trip.end_date)}\n                </p>\n              </div>\n              <WaveButton\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => {\n                  const callbackUrl = NavigationCallback.createCallbackFromCurrent(\n                    `/trips/${trip.id}/edit`,\n                    { \n                      preserveQuery: true, \n                      preserveFragment: true,\n                      contextData: { selectedDay, tripId: trip.id }\n                    }\n                  );\n                  navigate(callbackUrl);\n                }}\n                className=\"flex items-center gap-2 hover:bg-white/10\"\n                ariaLabel=\"여행 수정\"\n              >\n                <Edit className=\"w-4 h-4\" />\n                <span className=\"hidden sm:inline\">수정</span>\n              </WaveButton>\n            </div>\n\n            {/* Cover Image */}\n            <div className=\"relative w-full h-48 md:h-56 lg:h-64 mb-4 rounded-xl overflow-hidden bg-gradient-to-br from-travel-blue/20 to-travel-purple/20\">\n              {trip.cover_image ? (\n                <img \n                  src={trip.cover_image} \n                  alt={trip.title}\n                  className=\"w-full h-full object-cover\"\n                />\n              ) : (\n                <div className=\"w-full h-full flex items-center justify-center\">\n                  <Image className=\"w-16 h-16 text-white/60\" />\n                </div>\n              )}\n              \n              {/* Edit Image Button Overlay */}\n              <div className=\"absolute top-2 right-2 sm:top-3 sm:right-3 opacity-80 sm:opacity-60 hover:opacity-100 transition-opacity\">\n                <WaveButton\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => {\n                    const callbackUrl = NavigationCallback.createCallbackFromCurrent(\n                      `/trips/${trip.id}/edit`,\n                      { \n                        preserveQuery: true, \n                        preserveFragment: true,\n                        contextData: { selectedDay, tripId: trip.id }\n                      }\n                    );\n                    navigate(callbackUrl);\n                  }}\n                  className=\"p-2 rounded-lg bg-black/30 hover:bg-black/50 backdrop-blur-sm\"\n                  ariaLabel=\"이미지 수정\"\n                >\n                  <Edit className=\"w-3 h-3 text-white\" />\n                </WaveButton>\n              </div>\n            </div>\n\n            {/* Trip Details */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center space-x-2 text-white/80\">\n                <MapPin className=\"w-4 h-4\" />\n                <span className=\"text-sm md:text-base\">{trip.country}</span>\n              </div>\n              \n              <div className=\"flex items-center space-x-2 text-white/80\">\n                <Calendar className=\"w-4 h-4\" />\n                <span className=\"text-sm md:text-base\">\n                  {formatDate(trip.start_date)} ~ {formatDate(trip.end_date)}\n                </span>\n              </div>\n              \n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 pt-2 border-t border-white/10\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-white/60 text-sm md:text-base\">총 기간</span>\n                  <span className=\"text-travel-blue font-semibold text-sm md:text-base\">{getTripDuration()}일</span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-white/60 text-sm md:text-base\">일정 개수</span>\n                  <span className=\"text-travel-orange font-semibold text-sm md:text-base\">{plans.length}개</span>\n                </div>\n              </div>\n            </div>\n          </GlassCard>\n\n          {/* Day Navigation */}\n          <div className=\"mb-6\">\n            <GlassCard \n              variant=\"light\" \n              withWaveEffect={true}\n              hoverable={false}\n              className=\"mb-4 animate-fade-in\"\n              style={{ animationDelay: '0.2s' }}\n            >\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n                <div>\n                  <h2 className=\"text-xl md:text-2xl font-bold text-white\">일정</h2>\n                  <p className=\"text-white/60 text-sm mt-1\">일정 카드를 클릭하거나 편집 버튼으로 수정할 수 있습니다</p>\n                </div>\n                <WaveButton\n                  variant=\"travel\"\n                  size=\"sm\"\n                  onClick={handleAddPlan}\n                  className=\"wave-optimized\"\n                >\n                  <Plus className=\"w-4 h-4 mr-1\" />\n                  추가\n                </WaveButton>\n              </div>\n            </GlassCard>\n\n            {/* Day Tabs */}\n            <GlassCard \n              variant=\"light\" \n              className=\"animate-fade-in\"\n              style={{ animationDelay: '0.3s' }}\n            >\n              <div className=\"flex space-x-2 overflow-x-auto pb-2\">\n                {days.map((day) => {\n                  const dayPlans = getDayPlans(day);\n                  return (\n                    <button\n                      key={day}\n                      id={`day-tab-${day}`}\n                      onClick={() => setSelectedDay(day)}\n                      className={`relative flex-shrink-0 px-3 md:px-4 py-2 rounded-lg text-sm md:text-base font-medium transition-all wave-float ${\n                        selectedDay === day\n                          ? 'bg-primary-500 text-white shadow-lg shadow-primary-500/25'\n                          : 'bg-white/10 text-white/70 hover:bg-white/20 hover:scale-105'\n                      }`}\n                    >\n                      <div className=\"flex flex-col items-center\">\n                        <div className=\"flex items-center gap-1\">\n                          <span className=\"font-semibold\">Day {day}</span>\n                          {dayPlans.length > 0 && (\n                            <span className=\"text-xs bg-white/20 rounded-full px-1.5\">\n                              {dayPlans.length}\n                            </span>\n                          )}\n                        </div>\n                        <span className=\"text-xs opacity-80\">{getDayWithDate(day)}</span>\n                      </div>\n                    </button>\n                  );\n                })}\n              </div>\n            </GlassCard>\n          </div>\n\n          {/* Plans List */}\n          <div className=\"space-y-4\">\n            {getDayPlans(selectedDay).length === 0 ? (\n              <GlassCard \n                variant=\"light\" \n                withWaveEffect={true}\n                className=\"text-center py-8 animate-fade-in wave-optimized\"\n                style={{ animationDelay: '0.4s' }}\n              >\n                <Calendar className=\"w-16 h-16 text-white/40 mx-auto mb-4 wave-pulse\" />\n                <p className=\"text-white/60 mb-4\">Day {selectedDay} ({getDayWithDate(selectedDay)})에 일정이 없어요</p>\n                <WaveButton \n                  variant=\"travel\" \n                  onClick={handleAddPlan}\n                  className=\"wave-optimized\"\n                >\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  첫 번째 일정 추가\n                </WaveButton>\n              </GlassCard>\n            ) : (\n              getDayPlans(selectedDay).map((plan, index) => {\n                return (\n                  <div\n                    key={plan.id}\n                    className=\"animate-fade-in\"\n                    style={{ animationDelay: `${0.4 + index * 0.1}s` }}\n                  >\n                    <PlanCard\n                      plan={plan}\n                      onClick={() => handlePlanClick(plan)}\n                      onEdit={() => handlePlanEdit(plan)}\n                      onDelete={() => handlePlanDelete(plan)}\n                      showActions={true}\n                      className=\"wave-optimized\"\n                    />\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};"],"names":["TripDetail","id","useParams","user","useAuth","navigate","useNavigate","location","useLocation","trip","setTrip","useState","plans","setPlans","loading","setLoading","error","setError","selectedDay","setSelectedDay","useEffect","tripUnsubscribe","onSnapshot","doc","db","tripData","plansQuery","query","collection","where","plansUnsubscribe","snapshot","sortedPlans","a","b","dayMatch","dayNumber","totalDays","getTripDuration","jsx","GlassCard","WaveButton","formatDate","dateString","formatKoreanDateLabel","year","month","day","date","weekday","mm","dd","start","end","diffTime","getDayWithDate","targetDate","dayName","getDayPlans","plan","days","_","i","handleAddPlan","callbackUrl","DayNavigationCallback","handlePlanClick","handlePlanEdit","handlePlanDelete","deleteDoc","jsxs","Header","ArrowLeft","NavigationCallback","Edit","Image","MapPin","Calendar","Plus","dayPlans","index","PlanCard","Footer"],"mappings":"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"}