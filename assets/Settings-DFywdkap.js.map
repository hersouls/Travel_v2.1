{"version":3,"file":"Settings-DFywdkap.js","sources":["../../src/components/Settings.tsx","../../src/pages/Settings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useAuth } from '../contexts';\nimport { useNavigationCallback } from '../utils/navigationCallback';\nimport { GlassCard } from './GlassCard';\nimport { WaveButton } from './WaveButton';\nimport { \n  User, \n  Bell, \n  Shield, \n  LogOut,\n  X,\n  Plane\n} from 'lucide-react';\n\ninterface SettingsProps {\n  isOpen?: boolean;\n  onClose?: () => void;\n  enableCallback?: boolean;\n}\n\nexport const Settings: React.FC<SettingsProps> = ({ \n  isOpen = true, \n  onClose,\n  enableCallback = false \n}) => {\n  const { user, signOut } = useAuth();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { smartGoBack } = useNavigationCallback(searchParams);\n  const [activeTab, setActiveTab] = useState<'profile' | 'notifications' | 'privacy'>('profile');\n  const [preferences, setPreferences] = useState({\n    theme: 'auto',\n    language: 'ko',\n    notifications: true,\n    emailNotifications: true\n  });\n\n  useEffect(() => {\n    // Load preferences from localStorage\n    const savedPreferences = localStorage.getItem('moonwaveTravelPreferences');\n    if (savedPreferences) {\n      try {\n        setPreferences(JSON.parse(savedPreferences));\n      } catch (error) {\n        console.error('Failed to parse preferences:', error);\n      }\n    }\n  }, []);\n\n  const savePreferences = (newPreferences: typeof preferences) => {\n    setPreferences(newPreferences);\n    localStorage.setItem('moonwaveTravelPreferences', JSON.stringify(newPreferences));\n  };\n\n  const handleSignOut = async () => {\n    try {\n      await signOut();\n      if (onClose) onClose();\n      \n      // 콜백이 활성화된 경우 스마트 뒤로가기, 아니면 로그인으로\n      if (enableCallback) {\n        smartGoBack(navigate, '/login');\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Logout failed:', error);\n      alert('로그아웃에 실패했습니다.');\n    }\n  };\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n    } else if (enableCallback) {\n      // 콜백이 활성화되었지만 onClose가 없는 경우 스마트 뒤로가기\n      smartGoBack(navigate, '/');\n    }\n  };\n\n  if (!isOpen) return null;\n\n  const tabs = [\n    { id: 'profile' as const, label: '프로필', icon: User },\n    { id: 'notifications' as const, label: '알림', icon: Bell },\n    { id: 'privacy' as const, label: '개인정보', icon: Shield },\n  ];\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50 backdrop-blur-sm\">\n      <GlassCard variant=\"strong\" className=\"w-full max-w-4xl max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-white/10\">\n          <div className=\"flex items-center space-x-3\">\n            <Plane className=\"w-8 h-8 text-travel-blue\" />\n            <h1 className=\"text-2xl font-bold text-white\">설정</h1>\n          </div>\n          {(onClose || enableCallback) && (\n            <button\n              onClick={handleClose}\n              className=\"p-2 hover:bg-white/10 rounded-lg transition-colors\"\n            >\n              <X className=\"w-5 h-5 text-white\" />\n            </button>\n          )}\n        </div>\n\n        <div className=\"flex h-[600px]\">\n          {/* Sidebar */}\n          <div className=\"w-64 bg-white/5 p-4\">\n            <nav className=\"space-y-2\">\n              {tabs.map((tab) => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-all ${\n                    activeTab === tab.id\n                      ? 'bg-travel-blue text-white'\n                      : 'text-white/70 hover:bg-white/10'\n                  }`}\n                >\n                  <tab.icon size={20} />\n                  <span>{tab.label}</span>\n                </button>\n              ))}\n            </nav>\n\n            {/* Logout Button */}\n            <div className=\"absolute bottom-4 left-4 right-4\">\n              <WaveButton\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={handleSignOut}\n                className=\"w-full\"\n              >\n                <LogOut size={16} className=\"mr-2\" />\n                로그아웃\n              </WaveButton>\n            </div>\n          </div>\n\n          {/* Content */}\n          <div className=\"flex-1 p-6 overflow-y-auto\">\n            {/* Profile Tab */}\n            {activeTab === 'profile' && (\n              <div className=\"space-y-6\">\n                <h2 className=\"text-xl font-semibold text-white mb-4\">프로필 정보</h2>\n                \n                <GlassCard variant=\"light\" className=\"p-6\">\n                  <div className=\"flex items-center space-x-4 mb-6\">\n                    <div className=\"w-16 h-16 rounded-full bg-gradient-to-br from-travel-blue to-travel-purple flex items-center justify-center overflow-hidden\">\n                      {user?.photoURL ? (\n                        <img\n                          src={user.photoURL}\n                          alt=\"Profile\"\n                          className=\"w-full h-full object-cover\"\n                        />\n                      ) : (\n                        <User className=\"w-8 h-8 text-white\" />\n                      )}\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-white\">\n                        {user?.displayName || user?.email?.split('@')[0] || '사용자'}\n                      </h3>\n                      <p className=\"text-white/60\">{user?.email}</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-white mb-2\">이메일</label>\n                      <input\n                        type=\"email\"\n                        value={user?.email || ''}\n                        disabled\n                        className=\"w-full px-4 py-2 bg-white/10 border border-white/20 rounded-lg text-white\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-white mb-2\">표시 이름</label>\n                      <input\n                        type=\"text\"\n                        value={user?.displayName || ''}\n                        disabled\n                        className=\"w-full px-4 py-2 bg-white/10 border border-white/20 rounded-lg text-white\"\n                        placeholder=\"설정된 이름이 없습니다\"\n                      />\n                    </div>\n                  </div>\n                </GlassCard>\n              </div>\n            )}\n\n\n            {/* Notifications Tab */}\n            {activeTab === 'notifications' && (\n              <div className=\"space-y-6\">\n                <h2 className=\"text-xl font-semibold text-white mb-4\">알림 설정</h2>\n                \n                <GlassCard variant=\"light\" className=\"p-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h3 className=\"text-white font-medium\">푸시 알림</h3>\n                        <p className=\"text-white/60 text-sm\">여행 일정 및 중요 알림을 받습니다</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={preferences.notifications}\n                          onChange={(e) => savePreferences({ ...preferences, notifications: e.target.checked })}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-white/20 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-travel-blue\"></div>\n                      </label>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h3 className=\"text-white font-medium\">이메일 알림</h3>\n                        <p className=\"text-white/60 text-sm\">중요한 업데이트를 이메일로 받습니다</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={preferences.emailNotifications}\n                          onChange={(e) => savePreferences({ ...preferences, emailNotifications: e.target.checked })}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-white/20 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-travel-blue\"></div>\n                      </label>\n                    </div>\n                  </div>\n                </GlassCard>\n              </div>\n            )}\n\n            {/* Privacy Tab */}\n            {activeTab === 'privacy' && (\n              <div className=\"space-y-6\">\n                <h2 className=\"text-xl font-semibold text-white mb-4\">개인정보 보호</h2>\n                \n                <GlassCard variant=\"light\" className=\"p-6\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h3 className=\"text-white font-medium mb-2\">데이터 보호</h3>\n                      <p className=\"text-white/70 text-sm mb-4\">\n                        모든 개인정보는 안전하게 암호화되어 저장됩니다.\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-white font-medium mb-2\">계정 보안</h3>\n                      <p className=\"text-white/70 text-sm mb-4\">\n                        Firebase Authentication을 통해 안전하게 관리됩니다.\n                      </p>\n                    </div>\n                    \n                    <div className=\"pt-4 border-t border-white/10\">\n                      <WaveButton\n                        variant=\"secondary\"\n                        size=\"sm\"\n                        onClick={() => alert('계정 삭제 기능은 관리자에게 문의해주세요.')}\n                      >\n                        계정 삭제\n                      </WaveButton>\n                    </div>\n                  </div>\n                </GlassCard>\n              </div>\n            )}\n          </div>\n        </div>\n      </GlassCard>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Settings as SettingsModal } from '../components/Settings';\n\nexport const Settings: React.FC = () => {\n  const navigate = useNavigate();\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsSettingsOpen(true);\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleClose = () => {\n    setIsSettingsOpen(false);\n    navigate('/');\n  };\n\n  return (\n    <SettingsModal \n      isOpen={isSettingsOpen}\n      onClose={handleClose}\n    />\n  );\n};"],"names":["Settings","isOpen","onClose","enableCallback","user","signOut","useAuth","navigate","useNavigate","searchParams","useSearchParams","smartGoBack","useNavigationCallback","activeTab","setActiveTab","useState","preferences","setPreferences","useEffect","savedPreferences","error","savePreferences","newPreferences","handleSignOut","handleClose","tabs","User","Bell","Shield","jsx","GlassCard","jsxs","Plane","X","tab","WaveButton","LogOut","e","isSettingsOpen","setIsSettingsOpen","timer","SettingsModal"],"mappings":"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"}